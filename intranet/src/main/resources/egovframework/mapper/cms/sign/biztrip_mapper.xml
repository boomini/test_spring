<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- SELECT * FROM ( SELECT A.*, ROWNUM RNUM FROM (
  ) A ) WHERE RNUM BETWEEN #{startRow} AND #{endRow} -->
<mapper namespace="biztripMapper">

  <select id="getListCount" parameterType="Map" resultType="int">
  		<![CDATA[
  		SELECT COUNT(*) FROM (
  			SELECT ROWNUM AS RS , BIZ_ID , USER_NM,  TRIPDAY ,VISITS,STEP FROM (
  		SELECT BIZ_ID , USER_NM,  TRIPDAY ,VISITS,STEP FROM (
				SELECT 
					SIGN_ID , LINE_ID  , SIGN_YN , BIZ_ID , USER_NM , STARTDAY||'~'||ENDDAY AS TRIPDAY , VISITS,
					NVL( (SELECT SL.SIGN_YN FROM SIGN_LINE SL WHERE SL.SIGN_ID = S.SIGN_ID AND SL.SIGN_ORDER = (S.SIGN_ORDER-1)) , 'Y')AS PRESIGN,
					F_GET_CODE_NM('219',SIGN_YN) AS STEP
				FROM SIGN_LINE S , BIZTRIP V
				WHERE BIZ_ID = SIGN_ID 
      				AND S.LINE_ID=#{gUserId}
	  			)
	  			 WHERE SIGN_YN = 'N'
	  			 AND PRESIGN='Y'
				UNION ALL 
		 SELECT 
		 	   BIZ_ID , USER_NM,  STARTDAY||'~'||ENDDAY AS TRIPDAY , VISITS,
		 	   CASE WHEN
		 	   		COUNT(*) =  COUNT( DECODE(SIGN_YN,'Y',1)  ) THEN '결재 완료'
		 	   		WHEN
		 	   		COUNT( DECODE(SIGN_YN,'R',1)  ) > 0 THEN  '반려'
		 	   		ELSE
		 	   		 '결재 대기'
		 	   	END AS STEP	 
		  FROM BIZTRIP V , SIGN_LINE S  
		 WHERE 
			  V.BIZ_ID = S.SIGN_ID
		   AND REGISTER=#{gUserId}
		 GROUP BY BIZ_ID , USER_NM ,  STARTDAY||'~'||ENDDAY , VISITS
		)
  		
  		
  		 )
		]]>
  </select>
  <select id="getList" parameterType="Map" resultType="HashMap">
  <![CDATA[
  		SELECT * FROM ( SELECT A.*, ROWNUM RNUM FROM (
  			SELECT ROWNUM AS RS , BIZ_ID , USER_NM,  TRIPDAY ,VISITS,STEP FROM (
  		SELECT BIZ_ID , USER_NM,  TRIPDAY ,VISITS , STEP FROM (
				SELECT 
					SIGN_ID , LINE_ID  , SIGN_YN , BIZ_ID , USER_NM , STARTDAY||'~'||ENDDAY AS TRIPDAY , VISITS,
					NVL( (SELECT SL.SIGN_YN FROM SIGN_LINE SL WHERE SL.SIGN_ID = S.SIGN_ID AND SL.SIGN_ORDER = (S.SIGN_ORDER-1)) , 'Y')AS PRESIGN,
					F_GET_CODE_NM('219',SIGN_YN) AS STEP
				FROM SIGN_LINE S , BIZTRIP V
				WHERE BIZ_ID = SIGN_ID 
      				AND S.LINE_ID=#{gUserId}
	  			)
	  			 WHERE SIGN_YN = 'N'
	  			 AND PRESIGN='Y'
				UNION ALL 
		 SELECT 
		 	   BIZ_ID , USER_NM,  STARTDAY||'~'||ENDDAY AS TRIPDAY , VISITS,
		 	   CASE WHEN
		 	   		COUNT(*) =  COUNT( DECODE(SIGN_YN,'Y',1)  ) THEN '결재 완료'
		 	   		WHEN
		 	   		COUNT( DECODE(SIGN_YN,'R',1)  ) > 0 THEN  '반려'
		 	   		ELSE
		 	   		 '결재 대기'
		 	   	END AS STEP	 
		  FROM BIZTRIP V , SIGN_LINE S  
		 WHERE 
			  V.BIZ_ID = S.SIGN_ID
		   AND REGISTER=#{gUserId}
		 GROUP BY BIZ_ID , USER_NM ,  STARTDAY||'~'||ENDDAY , VISITS
		)
  		 ) A ) WHERE RNUM BETWEEN #{startRow} AND #{endRow}
		]]>
  </select>
  
  <insert id="insert" parameterType="Map">
	  <selectKey resultType="string" keyProperty="BIZ_ID" order="BEFORE">
				SELECT 'BIZ_'||BIZTRIP_SEQ.NEXTVAL AS BIZ_ID FROM DUAL
	  </selectKey>
		  INSERT INTO BIZTRIP
			(USER_NM, AUTH, ORG, JOBS, PURPOSE, STARTDAY, ENDDAY, VISITS, PNUM, REGIST_DATE, REGISTER,BIZ_ID)
		VALUES
		(
		#{USER_NM},#{AUTH},#{ORG},#{JOBS},#{PURPOSE},#{STARTDAY},#{ENDDAY},#{VISITS},#{PNUM},SYSDATE,#{gUserId},#{BIZ_ID}
		)
  </insert>
  <insert id="insertLine" parameterType="Map">
  	INSERT INTO SIGN_LINE
			(SIGN_ID, LINE_ID, SIGN_YN, SIGN_ORDER)
	VALUES(#{BIZ_ID},#{LINE_ID},'N',#{SIGN_ORDER})
  </insert>
  <select id="getMemberList" parameterType="Map" resultType="HashMap">
		SELECT USER_ID , USER_NM||' '||F_GET_CODE_NM('50',AUTHOR_CODE) AS USERNM
		FROM COM_USER
		WHERE AUTHOR_CODE!=9999
		  AND USER_ID != #{gUserId}
  </select>
  <select id="getMember"  parameterType="Map" resultType="HashMap">
	  SELECT 
			F_GET_CODE_NM('206',ORG_CODE) AS ORG,
			F_GET_CODE_NM('50',AUTHOR_CODE) AS AUTH,
			DECODE(MBTLNUM ,'--',TELNO , MBTLNUM) AS PNUM,
			USER_NM
			FROM COM_USER
		WHERE
			USER_ID = #{gUserId}
  </select>
  <select id="getData"  parameterType="Map" resultType="HashMap">
		SELECT 
			   USER_NM , AUTH , ORG , JOBS , PURPOSE , TO_CHAR(STARTDAY,'YYYY-MM-DD') AS STARTDAY, TO_CHAR(ENDDAY,'YYYY-MM-DD') AS ENDDAY , VISITS , PNUM,
		       DECODE(REGISTER ,#{gUserId}, 'SELF' , 'SIGN' ) AS E_MODE,
	           (SELECT COUNT(*) FROM SIGN_LINE WHERE SIGN_YN='N' AND SIGN_ID =#{BIZ_ID} ) AS SIGN_COUNT , BIZ_ID
		 FROM BIZTRIP O
		WHERE BIZ_ID = #{BIZ_ID}
  </select>
  <select id="getSignLineList" parameterType="Map" resultType="HashMap">
	  SELECT 
			LINE_ID , USER_NM ,  
			F_GET_CODE_NM('219',SIGN_YN) AS SIGN_STEP,
			F_GET_CODE_NM('50',AUTHOR_CODE) AS AUTO_NM
		FROM SIGN_LINE , COM_USER		
		WHERE
			SIGN_ID = #{BIZ_ID}
		AND LINE_ID = USER_ID
		ORDER BY SIGN_ORDER
  </select>	
	<update id="update" parameterType="Map">
		UPDATE BIZTRIP SET   
			JOBS=#{JOBS}, 
			PURPOSE=#{PURPOSE}, 
			STARTDAY=#{STARTDAY}, 
			ENDDAY=#{ENDDAY}, 
			VISITS=#{VISITS}, 
			UPDATE_DATE=SYSDATE, 
			UPDATER=#{gUserId}
		WHERE BIZ_ID=#{BIZ_ID}
	</update>	
	<delete id="deleteLine" parameterType="Map">
		DELETE FROM SIGN_LINE WHERE SIGN_ID = #{BIZ_ID}
	</delete>
	<delete id="deleteVac" parameterType="Map">
		DELETE FROM EXPENSE WHERE EXPENSE_ID = #{EXPENSE_ID}
	</delete>
	<update id="sign" parameterType="Map">
		UPDATE SIGN_LINE SET
				SIGN_YN = #{SIGN_YN},
				SIGN_DT = SYSDATE
		 WHERE
				SIGN_ID = #{BIZ_ID} 
			AND LINE_ID = #{gUserId}
	</update>
	
	<select id="getTot" parameterType="Map" resultType="HashMap">
		SELECT 
				DISTANCE||'KM' AS DISTANCE  ,
				DISTANCE_CAL||'KM' AS DISTANCE_CAL,
				CAR_KM||'KM/L' AS CAR_KM,
				OIL_PRI||'원/L'AS OIL_PRI,
				OIL_TOT||'원' AS OIL_TOT,
				COST||'원' AS COST,
				PARK_C||'원' AS PARK_C, 
				(OIL_TOT + COST + PARK_C)||'원' AS TOT
			FROM (
				SELECT 
						A.OIL_ID , A.CAR_KM  , A.OIL_PRI ,B.DISTANCE , (B.DISTANCE*1.2) AS DISTANCE_CAL , 
						( (B.DISTANCE*1.2 / A.CAR_KM) * A.OIL_PRI ) AS OIL_TOT 
						,  B.COST , B.PARK_C 
					FROM 
						(
						SELECT 
								OIL_ID , CAR_KM  , OIL_PRI 
							FROM OIL
							WHERE OIL_ID  = #{BIZ_ID}
						) A  ,
						(
							SELECT
									OIL_ID , 
									SUM(DISTANCE) AS DISTANCE,
									SUM(COST) AS COST,
									SUM(PARK_C ) AS PARK_C
								FROM OIL_LIST OL
								WHERE 
									OIL_ID  = #{BIZ_ID}
								GROUP  BY OIL_ID
						) B
				)	 
	</select>
</mapper>