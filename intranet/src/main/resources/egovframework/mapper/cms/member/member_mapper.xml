<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<sql id="whereMember">
		<if test="pUserId != null and pUserId !=''">
			AND <![CDATA[USER_ID like '%'||#{pUserId}||'%']]>
		</if>
		<if test="pUserNm != null and pUserNm !=''">
			AND <![CDATA[USER_NM like '%'||#{pUserNm}||'%']]>
		</if>
		<if test="pAuth != null and pAuth !=''">
			AND <![CDATA[AUTHOR_CODE = #{pAuth}]]>
		</if>
		<if test="pUseAt != null and pUseAt !=''">
			AND <![CDATA[USE_AT = #{pUseAt}]]>
		</if>
	</sql>
	<!-- 회원정보 관리 카운트 -->
	<select id="getMemberCount" parameterType="Map" resultType="int">
		SELECT
		COUNT(*) CNT
		FROM COM_USER A
        WHERE 1 = 1
		<include refid="whereMember" />
	</select>
	<!-- 회원정보 관리 조회 -->
	<select id="getMemberList" parameterType="Map" resultType="hashMap">
		        <![CDATA[SELECT * FROM
		    (
		        SELECT ROWNUM AS RNUM, S.* FROM
		        (
		                SELECT  
		                       A.*
                               ,F_GET_CODE_NM('50',AUTHOR_CODE) AUTHOR_CODE_NM
                               ,F_GET_CODE_NM('206',ORG_CODE ) AS ORG_NM
                               ,F_GET_CODE_NM('53',USE_AT) USE_AT_NM
                               ,USER_ID||'@@'||USER_NM TEMPS
		                FROM    COM_USER  A
                    WHERE 1 = 1
                    ]]>
		<include refid="whereMember" />
		        <![CDATA[ORDER BY USE_AT, A.REGIST_DT DESC
		        ) S
		    ORDER BY ROWNUM DESC
		    )]]>

		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
		ORDER BY RNUM ASC

	</select>
    
    <select id="getMemberExcelList" parameterType="Map" resultType="java.util.LinkedHashMap">
        SELECT  
        ROWNUM, USER_ID, USER_NM, EMAIL, TELNO, MBTLNUM ,F_GET_CODE_NM('50',AUTHOR_CODE) AUTHOR_CODE_NM ,F_GET_CODE_NM('53',USE_AT) USE_AT_NM , TO_CHAR(REGIST_DT,'YYYY-MM-DD') REGIST_DT 
        FROM    COM_USER A
        WHERE 1 = 1
        <include refid="whereMember" />
    </select>
    
	<!-- 회원 상세 정보 -->
	<select id="getMember" parameterType="Map" resultType="hashMap">
         <![CDATA[
         SELECT   
              A.*,
              SUBSTR(TELNO, 1, INSTR(TELNO, '-', 1, 1) - 1) TELNO1,
              SUBSTR(TELNO, INSTR(TELNO, '-', 1, 1) + 1, INSTR(TELNO, '-', 1, 2) - INSTR(TELNO, '-', 1, 1) - 1) TELNO2,
              SUBSTR(TELNO, INSTR(TELNO, '-', 1, 2) + 1) TELNO3,
              SUBSTR(MBTLNUM, 1, INSTR(MBTLNUM, '-', 1, 1) - 1) MBTLNUM1,
              SUBSTR(MBTLNUM, INSTR(MBTLNUM, '-', 1, 1) + 1, INSTR(MBTLNUM, '-', 1, 2) - INSTR(MBTLNUM, '-', 1, 1) - 1) MBTLNUM2,
              SUBSTR(MBTLNUM, INSTR(MBTLNUM, '-', 1, 2) + 1) MBTLNUM3,
              SUBSTR(BRTHDY, 1, INSTR(BRTHDY, '-', 1, 1) - 1) BRTHDY1,
              SUBSTR(BRTHDY, INSTR(BRTHDY, '-', 1, 1) + 1, INSTR(BRTHDY, '-', 1, 2) - INSTR(BRTHDY, '-', 1, 1) - 1) BRTHDY2,
              SUBSTR(BRTHDY, INSTR(BRTHDY, '-', 1, 2) + 1) BRTHDY3,
              DECODE((SELECT INSTR(CODE_NM, '유역환경청') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE),'0','',ORG_CODE) GIGWAN_CODE,
              (CASE 
                 WHEN (SELECT INSTR(CODE_NM, '시도') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  SUBSTR(ORG_CODE,1,2)
                 WHEN (SELECT INSTR(CODE_NM, '시군') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  SUBSTR(ORG_CODE,1,2)
                 WHEN (SELECT INSTR(CODE_NM, '보건환경연구원') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  SUBSTR(ORG_CODE,1,2)
                 ELSE ''
              END) SIDO_CODE,
              DECODE((SELECT INSTR(CODE_NM, '시군') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE),'0','',ORG_CODE) SIGUN_CODE
              
        FROM       COM_USER A
        WHERE USER_ID = #{user_id}
        ]]>
	</select>
	<!-- 회원정보 등록 -->
	<insert id="insertMember" parameterType="hashMap">
		INSERT INTO COM_USER
		(
		USER_ID, USER_NM, PASSWORD,
		AUTHOR_CODE, BRTHDY,
		TELNO,
		MBTLNUM,
		EMAIL,
		USE_AT, REGIST_DT, REGISTER_ID, CHANGE_DT, CHANGER_ID, ORG_CODE, USER_IP
		)
		VALUES
		(
		#{USER_ID}, #{USER_NM}, #{PASSWORD},
		#{AUTHOR_CODE},
		CONCAT(CONCAT(CONCAT(CONCAT(#{BRTHDY1},'-'),#{BRTHDY2}),'-'),#{BRTHDY3}),
		CONCAT(CONCAT(CONCAT(CONCAT(#{TELNO1},'-'),#{TELNO2}),'-'),#{TELNO3}),
		CONCAT(CONCAT(CONCAT(CONCAT(#{MBTLNUM1},'-'),#{MBTLNUM2}),'-'),#{MBTLNUM3}),
		#{EMAIL},
		NVL(#{USE_AT},'C'), SYSDATE, NVL(#{gUserId},#{USER_ID}), SYSDATE,
		NVL(#{gUserId},#{USER_ID}), #{ORG_CODE}, #{USER_IP}
		)
	</insert>
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="hashMap">
		UPDATE COM_USER
		<set>
			<if test="AUTHOR_CODE !=null and AUTHOR_CODE!=''">
				AUTHOR_CODE = #{AUTHOR_CODE},<!--권한코드 -->
			</if>
			<if test="PASSWORD !=null and PASSWORD !=''">
				PASSWORD = #{PASSWORD},<!--비밀번호 -->
			</if>
			<if test="USER_NM !=null and USER_NM !=''">
				USER_NM = #{USER_NM},<!--이름 -->
			</if>
			<if test="USE_AT !=null and USE_AT !=''">
				USE_AT = #{USE_AT},<!--회원상태 -->
			</if>
			<if test="ORG_CODE !=null and ORG_CODE !=''">
				ORG_CODE = #{ORG_CODE},
			</if>
			BRTHDY =
			CONCAT(CONCAT(CONCAT(CONCAT(#{BRTHDY1},'-'),#{BRTHDY2}),'-'),#{BRTHDY3}),<!--생년월일 -->
			TELNO =
			CONCAT(CONCAT(CONCAT(CONCAT(#{TELNO1},'-'),#{TELNO2}),'-'),#{TELNO3}),<!--전화번호 -->
			MBTLNUM =
			CONCAT(CONCAT(CONCAT(CONCAT(#{MBTLNUM1},'-'),#{MBTLNUM2}),'-'),#{MBTLNUM3}),<!--휴대폰번호 -->
			EMAIL        = #{EMAIL},<!--메일 -->
			USER_IP      = #{USER_IP},<!--아이피 -->
			CHANGE_DT    = SYSDATE,<!--변경일시 -->
			CHANGER_ID   = #{gUserId},<!--변경자ID -->
		</set>
		WHERE USER_ID   =  #{USER_ID}
	</update>

	<!-- 로그인 실패 처리-->
	<update id="loginFailCountChg" parameterType="hashMap">
		UPDATE COM_USER SET
		<if test='failLogin =="Y"'>
			LOGIN_FAIL_CO = NVL(LOGIN_FAIL_CO,0)+1
		</if>
		<if test='failLogin =="N"'>
			LOGIN_FAIL_CO = 0
		</if>
		WHERE USER_ID = #{userId}
	</update>
    
	<!-- 비밀 번호 변경 >> 추가 로그인 실패 커럼 -->
	<update id="passwdChg" parameterType="hashMap">
		UPDATE COM_USER SET
		<if test="pwd != null and pwd !=''">
			PASSWORD = #{pwd},
		</if>
		CHANGE_DT = SYSDATE,<!--변경일시 -->
		CHANGER_ID = #{gUserId}<!--변경자ID -->
		WHERE USER_ID = #{user_id}
	</update>

	<!-- 비밀 번호 초기화 -->
	<update id="passwdInit" parameterType="hashMap">
		UPDATE COM_USER SET
		PASSWORD = #{encPasswd},
        LOGIN_FAIL_CO = 0,
		CHANGE_DT = SYSDATE,<!--변경일시 -->
		CHANGER_ID = #{gUserId}<!--변경자ID -->
		WHERE USER_ID = #{user_id}
	</update>
    
    <!-- 회원 상태 변경 -->
    <update id="userStatChg" parameterType="HashMap">
        UPDATE COM_USER SET
        USE_AT = #{USE_AT},
        RETURN_PRVONSH = #{RETURN_PRVONSH},
        CHANGE_DT = SYSDATE,    <!--변경일시 -->
        CHANGER_ID = #{gUserId}  <!--변경자ID -->
        WHERE USER_ID = #{USER_ID}
    </update>

	<!-- 일반로 로그인 -->
	<select id="memberLogin" parameterType="Map" resultType="memberVo">
        <![CDATA[
            SELECT 
                A.*,
                (CASE 
                 WHEN (SELECT INSTR(CODE_NM, '시도') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  SUBSTR(ORG_CODE,1,2)||'000'
                 WHEN (SELECT INSTR(CODE_NM, '시군') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  ORG_CODE
                 ELSE ''
                END) SIDO_CODE,
                (CASE 
                 WHEN (SELECT INSTR(CODE_NM, '환경청') FROM COM_CODE WHERE UPPER_CODE_NO = 50 AND CODE = AUTHOR_CODE) > 0 THEN  ORG_CODE
                 ELSE ''
                END) RIVER_CODE,
                (SELECT CODE_NM FROM COM_CODE  WHERE UPPER_CODE_NO ='50' AND AUTHOR_CODE = CODE) AUTHOR_CODE_NM,
               TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') LOGIN_DT
            FROM COM_USER A
            WHERE A.USER_ID = #{userId}
            AND USE_AT <> 'N'
            ]]>
	</select>
	<!-- 그룹에 속한 관리자 정보를 가져옴 -->
	<select id="getAuthUrlList" parameterType="Map" resultType="hashMap">
		SELECT DISTINCT A.MENU_NO, B.CNTNTS_TY ,
		(CASE WHEN B.CNTNTS_TY = 'L' THEN NVL(B.LINK_URL,'TTTTT')||'.*'
		WHEN B.CNTNTS_TY = 'H' THEN '/cms/contents/'||'.*'
		WHEN B.CNTNTS_TY = 'B' THEN '/cms/board/'||B.BBS_NO||'/.*'
		END
		) URL
		FROM COM_MENU_AUTHOR A, COM_MENU B
		WHERE A.MENU_NO= B.MENU_NO
		AND B.CNTNTS_TY != 'D'
		AND B.MENU_NO IN (
		SELECT DISTINCT MENU_NO FROM COM_MENU_AUTHOR C
		WHERE (C.GROUP_ID = #{authGrp} OR C.GROUP_ID = '0200')
        AND USE_AUTHOR_AT = 'Y'
		)
	</select>


	<!-- id 찾기 -->
	<select id="findSearchId" parameterType="hashMap" resultType="hashMap">
	    <![CDATA[
        SELECT USER_ID FROM COM_USER
        WHERE USER_NM = #{userNm}
        AND   MBTLNUM = CONCAT(CONCAT(CONCAT(CONCAT(#{mbtlnum1},'-'),#{mbtlnum2}),'-'),#{mbtlnum3})
        ]]>
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="findSearchPass" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			SELECT USER_ID FROM COM_USER
      WHERE USER_NM = #{userNm}
      AND   USER_ID = #{userId}
      AND   MBTLNUM = CONCAT(CONCAT(CONCAT(CONCAT(#{mbtlnum1},'-'),#{mbtlnum2}),'-'),#{mbtlnum3})
		]]>
	</select>

	<!-- 아이디 중복 체크 -->
	<select id="getIdDupCk" parameterType="Map" resultType="int">
		SELECT
		COUNT(*) CNT
		FROM COM_USER
		WHERE USER_ID = #{user_id}
	</select>

	<!-- 세션 아이디 조회 -->
	<select id="getSessionId" parameterType="Map" resultType="hashMap">
		SELECT SESSION_ID
		FROM COM_USER A
		WHERE A.USER_ID= #{user_id}
	</select>

	<update id="insertSession" parameterType="hashMap">
		UPDATE COM_USER SET
		SESSION_ID = #{session_id}
		WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 관리자 접근 아이피 체크 -->
	<select id="getMngrUseIpCheckCnt" parameterType="Map" resultType="int">
		SELECT COUNT(*) CNT FROM COM_MNGR_IP
		WHERE (MNGR_IP = #{userIp} OR MNGR_IP = 'ALL')
		AND USE_AT ='Y'
	</select>
	

</mapper>
